# print("Hello, Python!😀")

# 주석(comment) : 컴퓨터가 읽는 부분이 아니라 사람이 읽을 수 있도록
# 정보를 제공하는 방법으로 주석처리가 되어 있는 부분은 파이썬 인터프리터가
# 코드로 인지하지 않음.
# 미리 작성해놓고 후에 주석처리를 하는 방법 : ctrl + /

'''
다중 주석 처리
앞으로 우리가 필기를 하게 되는 내요잉 여러 줄에 걸쳐있을 경우네는 미리
작은 따옴표 3개(누르면 자동으로 3개 더 나옴)를 눌러주고 타이핑을
진행하게 됩니다. -> 엔터 시 자동으로 나머지 3개의 작은 따옴표가
내려가게 되면서 ctrl+/ 를 할 필요 없다는 장점이 있다.

1번 라인에서 우리가 작성한 print("Hello, Python!")을 분석하겠습니다.
'''


# print("1")
# print(1)
#print(Hello, Python!😀) -> 오류 발생.
'''
19~20번 라인의 출력 결과가 동일하기 때문에 큰따옴표의 필요성에 대해
인지하지 못할 수 있지만 21번 라인이 오류가 발생하는 점에서 차이를
발견할 수 있습니다.
'''

# print(type("1"))    # <class 'str'>
# print(type(1))      # <class 'int'>
#
# #type의 차이에 따른 검증
# print("1"+"2")      # 12
# print(1+2)          # 3
#
# print("2"+"1")      # 21        / 문자열이라서 순서가 중요
# print(2+1)          # 3         / 정수라서 교환법칙에 따라 순서가 중요하지 않음.

'''
print() : 컴퓨터한테 출력해달라고 요청하는 명령어
type() : 소괄호 내에 들어가 있는 데이터가 어떤 자료형인지 표시하는 명령어
        -> 주로 print() 함수와 합쳐져서 사용됨.
str : string의 축약어로 '문자열'을 의미
int : integer의 축약어로 '정수'를 의미

자기 소개 작성 후 콘솔에 출력되려면 큰 따옴표 내에 작성을 해야한다.
'''

# print("제 이름은 최재혁입니다. 나이는 비공개이고, 부산진구 개금동에 삽니다")
# print("MBTI는 INFP입니다. "
#       "엔터를 치니까 추가되네요.")
# print('''
# 이런 경우에는 엔터를 치게 되면
# 콘솔에서 엔터키가 적용된 상태로
# 작성이 가능합니다.
# ''')

# a = "제 이름은 최재혁입니다. 나이는 비공개이고, 부산진구 개금동에 삽니다"

# print(a)
# print(type(a))
'''
변수(variable) : 데이터를 저장하는 바구니. 어떤 이름 붙일 지는 자유!
변수 명명 규칙(python 버전)
    1. 변수의 경우 소문자로만 입력.
    2. 여러 단어가 합쳐진 변수의 경우 _로 연결.
        ex) school_name (이런 걸 snake case라고 함)
        cf) Java의 경우에는 schoolName으로 작성함.

name 이라는 변수에는 이름,
age 라는 변수에는 나이를 대입해보세요.

그리고 콘솔창에 출력해보세요.
'''

name = "CJH"
age = 29
#
# print(name)
# print(age+1)        #  변수에 정수가 담겨 있다면 수학적 연산이 가능.

# print(b)            # 오류. 코드는 위에서 아래로 실행된다.

# b=1
# print(b)            # 결과값은 1
#
# b=b+1
# print(b)            # 결과값은 2

'''
대입 연산자
1. = : = 오른쪽에 있는 데이터를 = 왼쪽에 있는 변수에 대입하세요.
    즉, b에 b+1을 대입하세요. 라는 의미.

처음에 변수 이름을 정하고 "=" 표시 뒤에 넣고자 하는 데이터를 집어넣으면
print()를 통해서 출력하거나 수학적 연산이 가능하고,
동일한 변수명에 새로운 데이터를 집어넣는 것도 가능하다.
'''

'''
f-string : formatted string의 축약어. str내에 변수를 불러올 수 있음.
""내에 변수를 불러오기 위해서는 중괄호를 삽입하고 불러오고자 하는 변수를 기입함.
'''
# print(f"제 이름은 {name}이고, 나이는 {age}입니다. 내년에는 {age+1}살이 됩니다.")

'''
지금까지 수업한 방식으로는 미리 데이터를 준비해놓고, 거기에 변수를 대입합니다.
즉 실시간으로 데이터를 입력할 수가 없다.

이름이 "김일"이었다가 "김이"로 바꾸기 위해서는 두번 입력해야하는 번거로움이 있다.
이를 해결하기 위해서 우리는 input()을 이용할 수 있다.
'''

# input("당신의 이름이 무엇입니까? >>")

'''
위와 같이 입력하고 실행시키면 콘솔창에 이름을 입력할 수 있도록 커서가 생김.
거기에 입력하면 프로그램이 종료된다.
즉, 데이터를 입력받기는 했지만 변수에 저장하는 과정이 없었기 때문에 데이터가 휘발.
그렇다면 입력받은 값을 변수에 대입하면 저장이됨.
'''
# name = input("키미노 나마에와? >>")
# print(f"와타시와 {name} 데스.")

'''
input()함수는 ()안에 있는 질문사항(프롬프트)을 콘솔에 출력하여 사용자로 하여금 입력받을 수 있게끔 합니다.
사용자가 입력하면 그 데이터는 name 이라는 변수에 저장되고,
이를 print() 함수를 통해 콘솔로 출력하게 됩니다.
'''


# text to aschii 사이트에서 로고 검색
logo = '''
 /$$                 /$$ /$$          
| $$                | $$| $$          
| $$$$$$$   /$$$$$$ | $$| $$  /$$$$$$ 
| $$__  $$ /$$__  $$| $$| $$ /$$__  $$
| $$  \ $$| $$$$$$$$| $$| $$| $$  \ $$
| $$  | $$| $$_____/| $$| $$| $$  | $$
| $$  | $$|  $$$$$$$| $$| $$|  $$$$$$/
|__/  |__/ \_______/|__/|__/ \______/                                                                
'''

print(logo)

